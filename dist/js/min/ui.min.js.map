{"version":3,"file":"ui.min.js","names":["slides","document","querySelectorAll","dotsContainer","querySelector","currentSlide","updateSlides","forEach","dot","i","style","background","slide","transform","insertAdjacentHTML","addEventListener","e","target","closest","slideIndex","dataset","carousel","getElementById","btnPrev","btnNext","filterButtons","currentIndex","allData","currentData","updateCarousel","cards","length","cardWidth","offsetWidth","maxIndex","Math","max","offset","transition","disabled","renderHouses","list","innerHTML","house","card","createElement","className","type","image","label","toLowerCase","replace","includes","name","price","toLocaleString","avatar","user","location","appendChild","res","fetch","ok","Error","json","activeFilter","btn","textContent","trim","b","classList","remove","add","filter","h","err","console","error"],"sources":["ui.js"],"mappings":"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","ignoreList":[],"sourcesContent":["const slides = document.querySelectorAll('.testimonials-slider__slide');\r\nconst dotsContainer = document.querySelector('.testimonials-slider__dots');\r\nlet currentSlide = 1;\r\n\r\nconst updateSlides = currentSlide => {\r\n  const dots = document.querySelectorAll('.testimonials-slider__dots__dot');\r\n  dots.forEach((dot, i) => {\r\n    if (i === currentSlide) dot.style.background = '#575757ff';\r\n    else dot.style.background = '#b9b9b9';\r\n  });\r\n  slides.forEach((slide, i) => {\r\n    slide.style.transform = `translateX(${i * 100 - currentSlide * 100}%)`;\r\n  });\r\n};\r\n\r\nslides.forEach((slide, i) => {\r\n  slide.style.transform = `translateX(${i * 100}%)`;\r\n\r\n  dotsContainer.insertAdjacentHTML(\r\n    'beforeend',\r\n    `<button class=\"testimonials-slider__dots__dot\" data-slide=\"${i}\"></button>`\r\n  );\r\n\r\n  slide.addEventListener('click', () => {\r\n    currentSlide = i;\r\n    updateSlides(currentSlide);\r\n  });\r\n});\r\n\r\ndotsContainer.addEventListener('click', function (e) {\r\n  const dot = e.target.closest('.testimonials-slider__dots__dot');\r\n  if (!dot) return;\r\n\r\n  const slideIndex = +dot.dataset.slide;\r\n  currentSlide = slideIndex;\r\n\r\n  updateSlides(currentSlide);\r\n});\r\n\r\nupdateSlides(1);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const carousel = document.getElementById(\"houseCarousel\");\r\n  const btnPrev = document.querySelector(\".featured-house__nav__pagination .btn-round:first-child\");\r\n  const btnNext = document.querySelector(\".featured-house__nav__pagination .btn-round:last-child\");\r\n  const filterButtons = document.querySelectorAll(\".featured-house__nav__filters button\");\r\n\r\n  let currentIndex = 0;\r\n  const cardsPerView = 2;\r\n  let allData = [];\r\n  let currentData = [];\r\n\r\n  function updateButtons() {\r\n    btnPrev.disabled = currentIndex === 0;\r\n    btnNext.disabled = currentIndex >= Math.max(0, currentData.length - cardsPerView);\r\n  }\r\n\r\nfunction updateCarousel() {\r\n  const cards = carousel.querySelectorAll(\".house-card\");\r\n  if (!cards.length) return;\r\n\r\n  const cardWidth = cards[0].offsetWidth + 16; // 16 = gap\r\n  const maxIndex = Math.max(0, cards.length - cardsPerView);\r\n\r\n  // Clamp currentIndex\r\n  if (currentIndex > maxIndex) currentIndex = maxIndex;\r\n\r\n  const offset = -(currentIndex * cardWidth);\r\n  carousel.style.transform = `translateX(${offset}px)`;\r\n  carousel.style.transition = \"transform 0.3s ease\";\r\n\r\n  // Disable buttons if needed\r\n  btnPrev.disabled = currentIndex === 0;\r\n  btnNext.disabled = currentIndex === maxIndex;\r\n}\r\n\r\n  function renderHouses(list) {\r\n    currentData = list;\r\n    currentIndex = 0;\r\n    carousel.innerHTML = \"\";\r\n\r\n    list.forEach(house => {\r\n      const card = document.createElement(\"div\");\r\n      card.className = \"house-card\";\r\n      card.dataset.type = house.type;\r\n      card.innerHTML = `\r\n        <div class=\"house-card__image\">\r\n          <img alt=\"\" src=\"${house.image}\" />\r\n          <div class=\"label label--${house.label.toLowerCase().replace(\" \", \"-\")}\">\r\n            <svg>\r\n              <use href=\"assets/icons/icons.svg#${\r\n                house.label.includes(\"deal\")\r\n                  ? \"icon-wallet\"\r\n                  : house.label.includes(\"Popular\")\r\n                  ? \"icon-popular\"\r\n                  : \"icon-house\"\r\n              }\"></use>\r\n            </svg>\r\n            ${house.label === 'popular' ? 'Popular' : `${house.label === 'new' ? 'New house' : 'Best deals'}`}\r\n          </div>\r\n        </div>\r\n        <div class=\"house-card__legend\">\r\n          <h3 class=\"house-card__name\">${house.name}</h3>\r\n          <p class=\"house-card__price\">$${house.price.toLocaleString(\"es-AR\")}</p>\r\n        </div>\r\n        <div class=\"house-card__user\">\r\n          <div class=\"house-card__user-icon\">\r\n            <img alt=\"\" src=\"${house.avatar}\" />\r\n          </div>\r\n          <div class=\"house-card__user-text\">\r\n            <p class=\"house-card__username\">${house.user}</p>\r\n            <p class=\"house-card__location\">${house.location}</p>\r\n          </div>\r\n        </div>\r\n      `;\r\n      carousel.appendChild(card);\r\n    });\r\n\r\n    updateCarousel();\r\n  }\r\n\r\n  // Pagination\r\n    btnNext.addEventListener(\"click\", () => {\r\n      const maxIndex = Math.max(0, currentData.length - cardsPerView);\r\n      if (currentIndex < maxIndex) {\r\n        currentIndex++;\r\n        updateCarousel();\r\n      }\r\n    });\r\n\r\n    btnPrev.addEventListener(\"click\", () => {\r\n      if (currentIndex > 0) {\r\n        currentIndex--;\r\n        updateCarousel();\r\n      }\r\n    });\r\n\r\n  (async function init() {\r\n    try {\r\n      const res = await fetch(\"data/featured.json\");\r\n      if (!res.ok) throw new Error(\"Error cargando featured.json\");\r\n      allData = await res.json();\r\n      let activeFilter = '';\r\n\r\n      renderHouses(allData);\r\n\r\n      // Filtering\r\n      filterButtons.forEach(btn => {\r\n        btn.addEventListener(\"click\", () => {\r\n          const type = btn.textContent.trim().toLowerCase();\r\n\r\n          // If the same active button is clicked again, reset the filter\r\n          if (activeFilter === type) {\r\n            activeFilter = ''; // Clear the active filter\r\n            // Reset all buttons to their default style\r\n            filterButtons.forEach(b => {\r\n              b.classList.remove(\"btn--light-green\", \"btn--light-green--borderless\");\r\n              b.classList.add(\"btn--transparent\");\r\n            });\r\n            renderHouses(allData); // Show all houses again\r\n            return; // Exit the function\r\n          }\r\n\r\n          // --- Set the new active filter and update styles ---\r\n          activeFilter = type;\r\n          // First, reset all buttons\r\n          filterButtons.forEach(b => {\r\n            b.classList.remove(\"btn--light-green\", \"btn--light-green--borderless\");\r\n            b.classList.add(\"btn--transparent\");\r\n          });\r\n          // Then, apply the active style to the clicked button\r\n          btn.classList.remove(\"btn--transparent\");\r\n          btn.classList.add(\"btn--light-green\", \"btn--light-green--borderless\");\r\n\r\n          // --- Filter and render the data ---\r\n          const filteredList = allData.filter(h => h.type === type);\r\n          renderHouses(filteredList);\r\n        });\r\n      });\r\n\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  })();\r\n});\r\n"]}